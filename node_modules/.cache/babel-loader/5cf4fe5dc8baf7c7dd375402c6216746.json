{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ingcr\\\\OneDrive\\\\DIGITAL HOUSE\\\\FRONT END 2\\\\examen\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\DentistContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DentistContext = /*#__PURE__*/createContext();\n\nconst DentistContextProvider = props => {\n  _s();\n\n  const [dentists, setDentists] = useState([]);\n  const [dentista, setDentista] = useState(null);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    const storedData = localStorage.getItem('data');\n\n    if (storedData) {\n      setData(JSON.parse(storedData));\n    }\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/users`);\n      setDentists(response.data);\n    } catch (error) {\n      console.error('Error fetching data from API:', error);\n    }\n  };\n\n  const datosDentista = async id => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(response => {\n      const data = response.data;\n      return data; // Realiza las operaciones necesarias con los datos\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const addData = (id, name, username) => {\n    const existingData = data.find(item => item.id === id);\n\n    if (existingData) {\n      console.log(\"La información ya existe en el local storage.\");\n      return;\n    }\n\n    const newData = [...data, {\n      id,\n      name,\n      username\n    }];\n    setData(newData);\n    localStorage.setItem('data', JSON.stringify(newData));\n    alert(\"Se ha agregado a  \" + name + \" como favorito\");\n  };\n\n  const removeData = id => {\n    const newData = data.filter(item => item.id !== id);\n    setData(newData);\n    localStorage.setItem('data', JSON.stringify(newData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DentistContext.Provider, {\n    value: {\n      dentists,\n      dentista,\n      data,\n      addData,\n      removeData,\n      datosDentista\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DentistContextProvider, \"+QfzG88eQ1OEW5xWpB9v3w4YT78=\");\n\n_c = DentistContextProvider;\nexport default DentistContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DentistContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useReducer","axios","DentistContext","DentistContextProvider","props","dentists","setDentists","dentista","setDentista","data","setData","fetchData","storedData","localStorage","getItem","JSON","parse","response","get","error","console","datosDentista","id","then","catch","addData","name","username","existingData","find","item","log","newData","setItem","stringify","alert","removeData","filter","children"],"sources":["C:/Users/ingcr/OneDrive/DIGITAL HOUSE/FRONT END 2/examen/fe3-final/src/Components/utils/DentistContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useReducer } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const DentistContext = createContext();\r\n\r\nconst DentistContextProvider = (props) => {\r\n\r\n  \r\n  const [dentists, setDentists] = useState([]);\r\n  const [dentista, setDentista] = useState(null);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    fetchData();\r\n    const storedData = localStorage.getItem('data');\r\n    if (storedData) {\r\n      setData(JSON.parse(storedData));\r\n    }\r\n\r\n    \r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/users`); \r\n      setDentists(response.data);\r\n     \r\n    } catch (error) {\r\n      console.error('Error fetching data from API:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const datosDentista = async (id) => {\r\n    \r\n\r\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((response) => {\r\n        const data = response.data;\r\n        return data\r\n        // Realiza las operaciones necesarias con los datos\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   const addData = (id, name, username) => {\r\n\r\n    const existingData = data.find((item) => item.id === id);\r\n\r\n    if (existingData) {\r\n\r\n    console.log(\"La información ya existe en el local storage.\");\r\n    return;\r\n\r\n    }\r\n    \r\n    const newData = [...data, { id, name, username }];\r\n    setData(newData);\r\n    localStorage.setItem('data', JSON.stringify(newData));\r\n    alert(\"Se ha agregado a  \" + name + \" como favorito\")\r\n  \r\n  };\r\n\r\n\r\n\r\n  const removeData = (id) => {\r\n   \r\n    const newData = data.filter((item) => item.id !== id);\r\n    setData(newData);\r\n    localStorage.setItem('data', JSON.stringify(newData));\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <DentistContext.Provider value={{ dentists, dentista, data, addData, removeData, datosDentista }}>\r\n      {props.children}\r\n    </DentistContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DentistContextProvider;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}